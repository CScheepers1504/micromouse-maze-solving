%implements s40_b0_l0j6o_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d4}MATLABSystem: '<S51>/MATLAB System1' */
/*@>6d6455*/if (/*@>6dd218*/localDW->/*@>6dd4e4*/obj.InitialCondition/*@>6d644b*/ != /*@>6dd1a2*/localP->/*@>6dd4de*/MATLABSystem1_InitialCondition) {
    /*@>6dd21f*/localDW->/*@>6dd4e7*/obj./*@>6dd4c6*/InitialCondition/*@>6d644c*/ = /*@>6dd1a9*/localP->/*@>6dd4e1*/MATLABSystem1_InitialCondition;
}
/*  Number of inputs */
/*  Number of outputs */
/*  Output the current state of the buffer */
/*@[1*/
/*@>6dcf98*/memcpy(&/*@>6dd176*/localB->/*@>6dd4d2*/MATLABSystem1/*@>6dce19*/[/*@>6dce08*/0], &/*@>6dd226*/localDW->/*@>6dd4ea*/obj./*@>6dd4cf*/Buffer[0], /*@>6dce17*/25U/*@>6dce2a*/ * /*@>6dce29*/sizeof(real_T));
/*@]*/
/*  Update the buffer */
/*@>6dd184*/localB->/*@>6dd4d5*/rtu_0/*@>6db547*/[/*@>6dbf5b*/0]/*@>6db54e*/ = /*@>6dbf52*/rtu_0;
/*@[2*/
/*@>6dcf9a*/memcpy(&/*@>6dd18b*/localB->/*@>6dd4d8*/rtu_0/*@>6dcdbd*/[/*@>6dcd8c*/1], &/*@>6dd22d*/localDW->/*@>6dd4ed*/obj./*@>6dd4cc*/Buffer[0], /*@>6dcdbb*/24U/*@>6dcdce*/ * /*@>6dcdcd*/sizeof(real_T));
/*@]*/
/*@[3*/
/*@>6dcf9c*/memcpy(&/*@>6dd234*/localDW->/*@>6dd4f0*/obj./*@>6dd4c9*/Buffer[0], &/*@>6dd192*/localB->/*@>6dd4db*/rtu_0/*@>6dcda7*/[/*@>6dcd7e*/0], /*@>6dcd9b*/25U/*@>6dcdaa*/ * /*@>6dcda9*/sizeof(real_T));
/*@]*/
/* {E!d4}End of MATLABSystem: '<S51>/MATLAB System1' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 1, 0)>
%endif
%if SLibCG_ArgAccessed(0, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void MicroMouseTem_MATLABSystem1(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("MicroMouseTem_MATLABSystem1", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MATLABSystem1_MicroMouseTem_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem1_MicroMouseTe_T *localDW\
%assign comma = ", "
%<comma>P_MATLABSystem1_MicroMouseTem_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 1, fcnProtoType)>
%endfunction
