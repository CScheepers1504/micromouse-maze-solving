%implements s40_b0_ezx4o_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d4152}MATLABSystem: '<S51>/MATLAB System1' */
/*@>6d315d*/if (/*@>6da2a7*/localDW->/*@>6da573*/obj.InitialCondition/*@>6d3153*/ != /*@>6da231*/localP->/*@>6da56d*/MATLABSystem1_InitialCondition) {
    /*@>6da2ae*/localDW->/*@>6da576*/obj./*@>6da555*/InitialCondition/*@>6d3154*/ = /*@>6da238*/localP->/*@>6da570*/MATLABSystem1_InitialCondition;
}
/*  Number of inputs */
/*  Number of outputs */
/*  Output the current state of the buffer */
/*@[1*/
/*@>6da027*/memcpy(&/*@>6da205*/localB->/*@>6da561*/MATLABSystem1/*@>6d9ea8*/[/*@>6d9e97*/0], &/*@>6da2b5*/localDW->/*@>6da579*/obj./*@>6da55e*/Buffer[0], /*@>6d9ea6*/25U/*@>6d9eb9*/ * /*@>6d9eb8*/sizeof(real_T));
/*@]*/
/*  Update the buffer */
/*@>6da213*/localB->/*@>6da564*/rtu_0/*@>6d85d6*/[/*@>6d8fea*/0]/*@>6d85dd*/ = /*@>6d8fe1*/rtu_0;
/*@[2*/
/*@>6da029*/memcpy(&/*@>6da21a*/localB->/*@>6da567*/rtu_0/*@>6d9e4c*/[/*@>6d9e1b*/1], &/*@>6da2bc*/localDW->/*@>6da57c*/obj./*@>6da55b*/Buffer[0], /*@>6d9e4a*/24U/*@>6d9e5d*/ * /*@>6d9e5c*/sizeof(real_T));
/*@]*/
/*@[3*/
/*@>6da02b*/memcpy(&/*@>6da2c3*/localDW->/*@>6da57f*/obj./*@>6da558*/Buffer[0], &/*@>6da221*/localB->/*@>6da56a*/rtu_0/*@>6d9e36*/[/*@>6d9e0d*/0], /*@>6d9e2a*/25U/*@>6d9e39*/ * /*@>6d9e38*/sizeof(real_T));
/*@]*/
/* {E!d4152}End of MATLABSystem: '<S51>/MATLAB System1' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 1, 0)>
%endif
%if SLibCG_ArgAccessed(0, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void MicroMouseTem_MATLABSystem1(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("MicroMouseTem_MATLABSystem1", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MATLABSystem1_MicroMouseTem_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem1_MicroMouseTe_T *localDW\
%assign comma = ", "
%<comma>P_MATLABSystem1_MicroMouseTem_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 1, fcnProtoType)>
%endfunction
