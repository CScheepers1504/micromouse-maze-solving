%implements s44_b0_9hueo_1_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d2018}MATLABSystem: '<S59>/MATLAB System1' */
/*@>6d2c15*/if (/*@>6db69e*/localDW->/*@>6db96a*/obj.InitialCondition/*@>6d2c0b*/ != /*@>6db625*/localP->/*@>6db964*/MATLABSystem1_InitialCondition) {
    /*@>6db6a5*/localDW->/*@>6db96d*/obj./*@>6db94c*/InitialCondition/*@>6d2c0c*/ = /*@>6db62c*/localP->/*@>6db967*/MATLABSystem1_InitialCondition;
}
/*  Number of inputs */
/*  Number of outputs */
/*  Output the current state of the buffer */
/*@[6d92cd*/
/*@>6db41b*/memcpy(&/*@>6db5f9*/localB->/*@>6db958*/MATLABSystem1/*@>6db29c*/[/*@>6db28b*/0], &/*@>6db6ac*/localDW->/*@>6db970*/obj./*@>6db955*/Buffer[0], /*@>6db29a*/25U/*@>6db2ad*/ * /*@>6db2ac*/sizeof(real_T));
/*@]*/
/*  Update the buffer */
/*@>6db607*/localB->/*@>6db95b*/rtu_0/*@>6d99ca*/[/*@>6da3de*/0]/*@>6d99d1*/ = /*@>6da3d5*/rtu_0;
/*@[6d92ce*/
/*@>6db41d*/memcpy(&/*@>6db60e*/localB->/*@>6db95e*/rtu_0/*@>6db240*/[/*@>6db20f*/1], &/*@>6db6b3*/localDW->/*@>6db973*/obj./*@>6db952*/Buffer[0], /*@>6db23e*/24U/*@>6db251*/ * /*@>6db250*/sizeof(real_T));
/*@]*/
/*@[6d92cf*/
/*@>6db41f*/memcpy(&/*@>6db6ba*/localDW->/*@>6db976*/obj./*@>6db94f*/Buffer[0], &/*@>6db615*/localB->/*@>6db961*/rtu_0/*@>6db22a*/[/*@>6db201*/0], /*@>6db21e*/25U/*@>6db22d*/ * /*@>6db22c*/sizeof(real_T));
/*@]*/
/* {E!d2018}End of MATLABSystem: '<S59>/MATLAB System1' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[1].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(1, 1, 0)>
%endif
%if SLibCG_ArgAccessed(1, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(1, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void MicroMouseTem_MATLABSystem1(\
%assign comma = ""
%if SLibCG_ArgAccessed(1, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("MicroMouseTem_MATLABSystem1", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MATLABSystem1_MicroMouseTem_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem1_MicroMouseTe_T *localDW\
%assign comma = ", "
%<comma>P_MATLABSystem1_MicroMouseTem_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 1, fcnProtoType)>
%endfunction
