%implements s40_b0_r32co_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d1334}MATLABSystem: '<S51>/MATLAB System1' */
/*@>6d2977*/if (/*@>6d954a*/localDW->/*@>6d9816*/obj.InitialCondition/*@>6d296d*/ != /*@>6d94f0*/localP->/*@>6d9810*/MATLABSystem1_InitialCondition) {
    /*@>6d9551*/localDW->/*@>6d9819*/obj./*@>6d97f8*/InitialCondition/*@>6d296e*/ = /*@>6d94f7*/localP->/*@>6d9813*/MATLABSystem1_InitialCondition;
}
/*  Number of inputs */
/*  Number of outputs */
/*  Output the current state of the buffer */
/*@[1*/
/*@>6d92e6*/memcpy(&/*@>6d94c4*/localB->/*@>6d9804*/MATLABSystem1/*@>6d9167*/[/*@>6d9156*/0], &/*@>6d9558*/localDW->/*@>6d981c*/obj./*@>6d9801*/Buffer[0], /*@>6d9165*/25U/*@>6d9178*/ * /*@>6d9177*/sizeof(real_T));
/*@]*/
/*  Update the buffer */
/*@>6d94d2*/localB->/*@>6d9807*/rtu_0/*@>6d7895*/[/*@>6d82a9*/0]/*@>6d789c*/ = /*@>6d82a0*/rtu_0;
/*@[2*/
/*@>6d92e8*/memcpy(&/*@>6d94d9*/localB->/*@>6d980a*/rtu_0/*@>6d910b*/[/*@>6d90da*/1], &/*@>6d955f*/localDW->/*@>6d981f*/obj./*@>6d97fe*/Buffer[0], /*@>6d9109*/24U/*@>6d911c*/ * /*@>6d911b*/sizeof(real_T));
/*@]*/
/*@[3*/
/*@>6d92ea*/memcpy(&/*@>6d9566*/localDW->/*@>6d9822*/obj./*@>6d97fb*/Buffer[0], &/*@>6d94e0*/localB->/*@>6d980d*/rtu_0/*@>6d90f5*/[/*@>6d90cc*/0], /*@>6d90e9*/25U/*@>6d90f8*/ * /*@>6d90f7*/sizeof(real_T));
/*@]*/
/* {E!d1334}End of MATLABSystem: '<S51>/MATLAB System1' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 1, 0)>
%endif
%if SLibCG_ArgAccessed(0, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void MicroMouseTemplat_MATLABSystem1(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("MicroMouseTemplat_MATLABSystem1", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MATLABSystem1_MicroMouseTem_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem1_MicroMouseTe_T *localDW\
%assign comma = ", "
%<comma>P_MATLABSystem1_MicroMouseTem_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 1, fcnProtoType)>
%endfunction
