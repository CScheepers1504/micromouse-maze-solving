%implements s40_b0_mdq2o_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d258}MATLABSystem: '<S51>/MATLAB System1' */
/*@>6d1d9a*/if (/*@>6d863c*/localDW->/*@>6d8908*/obj.InitialCondition/*@>6d1d90*/ != /*@>6d85de*/localP->/*@>6d8902*/MATLABSystem1_InitialCondition) {
    /*@>6d8643*/localDW->/*@>6d890b*/obj./*@>6d88ea*/InitialCondition/*@>6d1d91*/ = /*@>6d85e5*/localP->/*@>6d8905*/MATLABSystem1_InitialCondition;
}
/*  Number of inputs */
/*  Number of outputs */
/*  Output the current state of the buffer */
/*@[1*/
/*@>6d83d4*/memcpy(&/*@>6d85b2*/localB->/*@>6d88f6*/MATLABSystem1/*@>6d8255*/[/*@>6d8244*/0], &/*@>6d864a*/localDW->/*@>6d890e*/obj./*@>6d88f3*/Buffer[0], /*@>6d8253*/25U/*@>6d8266*/ * /*@>6d8265*/sizeof(real_T));
/*@]*/
/*  Update the buffer */
/*@>6d85c0*/localB->/*@>6d88f9*/rtu_0/*@>6d6983*/[/*@>6d7397*/0]/*@>6d698a*/ = /*@>6d738e*/rtu_0;
/*@[2*/
/*@>6d83d6*/memcpy(&/*@>6d85c7*/localB->/*@>6d88fc*/rtu_0/*@>6d81f9*/[/*@>6d81c8*/1], &/*@>6d8651*/localDW->/*@>6d8911*/obj./*@>6d88f0*/Buffer[0], /*@>6d81f7*/24U/*@>6d820a*/ * /*@>6d8209*/sizeof(real_T));
/*@]*/
/*@[3*/
/*@>6d83d8*/memcpy(&/*@>6d8658*/localDW->/*@>6d8914*/obj./*@>6d88ed*/Buffer[0], &/*@>6d85ce*/localB->/*@>6d88ff*/rtu_0/*@>6d81e3*/[/*@>6d81ba*/0], /*@>6d81d7*/25U/*@>6d81e6*/ * /*@>6d81e5*/sizeof(real_T));
/*@]*/
/* {E!d258}End of MATLABSystem: '<S51>/MATLAB System1' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 1, 0)>
%endif
%if SLibCG_ArgAccessed(0, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void MicroMouseTem_MATLABSystem1(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("MicroMouseTem_MATLABSystem1", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MATLABSystem1_MicroMouseTem_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem1_MicroMouseTe_T *localDW\
%assign comma = ", "
%<comma>P_MATLABSystem1_MicroMouseTem_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 1, fcnProtoType)>
%endfunction
