%implements s40_b0_dzc5o_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d9852}MATLABSystem: '<S51>/MATLAB System1' */
/*@>6d6704*/if (/*@>6dd74a*/localDW->/*@>6dda16*/obj.InitialCondition/*@>6d66fa*/ != /*@>6dd6d4*/localP->/*@>6dda10*/MATLABSystem1_InitialCondition) {
    /*@>6dd751*/localDW->/*@>6dda19*/obj./*@>6dd9f8*/InitialCondition/*@>6d66fb*/ = /*@>6dd6db*/localP->/*@>6dda13*/MATLABSystem1_InitialCondition;
}
/*  Number of inputs */
/*  Number of outputs */
/*  Output the current state of the buffer */
/*@[1*/
/*@>6dd4ca*/memcpy(&/*@>6dd6a8*/localB->/*@>6dda04*/MATLABSystem1/*@>6dd34b*/[/*@>6dd33a*/0], &/*@>6dd758*/localDW->/*@>6dda1c*/obj./*@>6dda01*/Buffer[0], /*@>6dd349*/25U/*@>6dd35c*/ * /*@>6dd35b*/sizeof(real_T));
/*@]*/
/*  Update the buffer */
/*@>6dd6b6*/localB->/*@>6dda07*/rtu_0/*@>6dba79*/[/*@>6dc48d*/0]/*@>6dba80*/ = /*@>6dc484*/rtu_0;
/*@[2*/
/*@>6dd4cc*/memcpy(&/*@>6dd6bd*/localB->/*@>6dda0a*/rtu_0/*@>6dd2ef*/[/*@>6dd2be*/1], &/*@>6dd75f*/localDW->/*@>6dda1f*/obj./*@>6dd9fe*/Buffer[0], /*@>6dd2ed*/24U/*@>6dd300*/ * /*@>6dd2ff*/sizeof(real_T));
/*@]*/
/*@[3*/
/*@>6dd4ce*/memcpy(&/*@>6dd766*/localDW->/*@>6dda22*/obj./*@>6dd9fb*/Buffer[0], &/*@>6dd6c4*/localB->/*@>6dda0d*/rtu_0/*@>6dd2d9*/[/*@>6dd2b0*/0], /*@>6dd2cd*/25U/*@>6dd2dc*/ * /*@>6dd2db*/sizeof(real_T));
/*@]*/
/* {E!d9852}End of MATLABSystem: '<S51>/MATLAB System1' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 1, 0)>
%endif
%if SLibCG_ArgAccessed(0, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void MicroMouseTem_MATLABSystem1(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("MicroMouseTem_MATLABSystem1", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MATLABSystem1_MicroMouseTem_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem1_MicroMouseTe_T *localDW\
%assign comma = ", "
%<comma>P_MATLABSystem1_MicroMouseTem_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 1, fcnProtoType)>
%endfunction
