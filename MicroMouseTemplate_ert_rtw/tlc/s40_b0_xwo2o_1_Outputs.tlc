%implements s40_b0_xwo2o_1_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d8}MATLABSystem: '<S51>/MATLAB System3' */
/*@>6d1b78*/if (/*@>6da8db*/localDW->/*@>6daba7*/obj.InitialCondition/*@>6d1b6e*/ != /*@>6da881*/localP->/*@>6daba1*/MATLABSystem3_InitialCondition) {
    /*@>6da8e2*/localDW->/*@>6dabaa*/obj./*@>6dab89*/InitialCondition/*@>6d1b6f*/ = /*@>6da888*/localP->/*@>6daba4*/MATLABSystem3_InitialCondition;
}
/*  Number of inputs */
/*  Number of outputs */
/*  Output the current state of the buffer */
/*@[6d8510*/
/*@>6da67f*/memcpy(&/*@>6da855*/localB->/*@>6dab95*/MATLABSystem3/*@>6da500*/[/*@>6da4ef*/0], &/*@>6da8e9*/localDW->/*@>6dabad*/obj./*@>6dab92*/Buffer[0], /*@>6da4fe*/10U/*@>6da511*/ * /*@>6da510*/sizeof(real_T));
/*@]*/
/*  Update the buffer */
/*@>6da863*/localB->/*@>6dab98*/rtu_0/*@>6d8c2e*/[/*@>6d9642*/0]/*@>6d8c35*/ = /*@>6d9639*/rtu_0;
/*@[6d8511*/
/*@>6da681*/memcpy(&/*@>6da86a*/localB->/*@>6dab9b*/rtu_0/*@>6da4a4*/[/*@>6da473*/1], &/*@>6da8f0*/localDW->/*@>6dabb0*/obj./*@>6dab8f*/Buffer[0], /*@>6da4a2*/9U/*@>6da4b5*/ * /*@>6da4b4*/sizeof(real_T));
/*@]*/
/*@[6d8512*/
/*@>6da683*/memcpy(&/*@>6da8f7*/localDW->/*@>6dabb3*/obj./*@>6dab8c*/Buffer[0], &/*@>6da871*/localB->/*@>6dab9e*/rtu_0/*@>6da48e*/[/*@>6da465*/0], /*@>6da482*/10U/*@>6da491*/ * /*@>6da490*/sizeof(real_T));
/*@]*/
/* {E!d8}End of MATLABSystem: '<S51>/MATLAB System3' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[1].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(1, 1, 0)>
%endif
%if SLibCG_ArgAccessed(1, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(1, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void MicroMouseTemplat_MATLABSystem3(\
%assign comma = ""
%if SLibCG_ArgAccessed(1, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("MicroMouseTemplat_MATLABSystem3", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MATLABSystem3_MicroMouseTem_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem3_MicroMouseTe_T *localDW\
%assign comma = ", "
%<comma>P_MATLABSystem3_MicroMouseTem_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 1, fcnProtoType)>
%endfunction
