%implements s40_b0_h8y4o_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d4454}MATLABSystem: '<S51>/MATLAB System1' */
/*@>6d3a2d*/if (/*@>6dab77*/localDW->/*@>6dae43*/obj.InitialCondition/*@>6d3a23*/ != /*@>6dab01*/localP->/*@>6dae3d*/MATLABSystem1_InitialCondition) {
    /*@>6dab7e*/localDW->/*@>6dae46*/obj./*@>6dae25*/InitialCondition/*@>6d3a24*/ = /*@>6dab08*/localP->/*@>6dae40*/MATLABSystem1_InitialCondition;
}
/*  Number of inputs */
/*  Number of outputs */
/*  Output the current state of the buffer */
/*@[1*/
/*@>6da8f7*/memcpy(&/*@>6daad5*/localB->/*@>6dae31*/MATLABSystem1/*@>6da778*/[/*@>6da767*/0], &/*@>6dab85*/localDW->/*@>6dae49*/obj./*@>6dae2e*/Buffer[0], /*@>6da776*/25U/*@>6da789*/ * /*@>6da788*/sizeof(real_T));
/*@]*/
/*  Update the buffer */
/*@>6daae3*/localB->/*@>6dae34*/rtu_0/*@>6d8ea6*/[/*@>6d98ba*/0]/*@>6d8ead*/ = /*@>6d98b1*/rtu_0;
/*@[2*/
/*@>6da8f9*/memcpy(&/*@>6daaea*/localB->/*@>6dae37*/rtu_0/*@>6da71c*/[/*@>6da6eb*/1], &/*@>6dab8c*/localDW->/*@>6dae4c*/obj./*@>6dae2b*/Buffer[0], /*@>6da71a*/24U/*@>6da72d*/ * /*@>6da72c*/sizeof(real_T));
/*@]*/
/*@[3*/
/*@>6da8fb*/memcpy(&/*@>6dab93*/localDW->/*@>6dae4f*/obj./*@>6dae28*/Buffer[0], &/*@>6daaf1*/localB->/*@>6dae3a*/rtu_0/*@>6da706*/[/*@>6da6dd*/0], /*@>6da6fa*/25U/*@>6da709*/ * /*@>6da708*/sizeof(real_T));
/*@]*/
/* {E!d4454}End of MATLABSystem: '<S51>/MATLAB System1' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 1, 0)>
%endif
%if SLibCG_ArgAccessed(0, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void MicroMouseTem_MATLABSystem1(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("MicroMouseTem_MATLABSystem1", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MATLABSystem1_MicroMouseTem_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem1_MicroMouseTe_T *localDW\
%assign comma = ", "
%<comma>P_MATLABSystem1_MicroMouseTem_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 1, fcnProtoType)>
%endfunction
