%implements s40_b0_int6o_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d4232}MATLABSystem: '<S51>/MATLAB System1' */
/*@>6d6540*/if (/*@>6dd5d5*/localDW->/*@>6dd8a1*/obj.InitialCondition/*@>6d6536*/ != /*@>6dd55f*/localP->/*@>6dd89b*/MATLABSystem1_InitialCondition) {
    /*@>6dd5dc*/localDW->/*@>6dd8a4*/obj./*@>6dd883*/InitialCondition/*@>6d6537*/ = /*@>6dd566*/localP->/*@>6dd89e*/MATLABSystem1_InitialCondition;
}
/*  Number of inputs */
/*  Number of outputs */
/*  Output the current state of the buffer */
/*@[1*/
/*@>6dd355*/memcpy(&/*@>6dd533*/localB->/*@>6dd88f*/MATLABSystem1/*@>6dd1d6*/[/*@>6dd1c5*/0], &/*@>6dd5e3*/localDW->/*@>6dd8a7*/obj./*@>6dd88c*/Buffer[0], /*@>6dd1d4*/25U/*@>6dd1e7*/ * /*@>6dd1e6*/sizeof(real_T));
/*@]*/
/*  Update the buffer */
/*@>6dd541*/localB->/*@>6dd892*/rtu_0/*@>6db904*/[/*@>6dc318*/0]/*@>6db90b*/ = /*@>6dc30f*/rtu_0;
/*@[2*/
/*@>6dd357*/memcpy(&/*@>6dd548*/localB->/*@>6dd895*/rtu_0/*@>6dd17a*/[/*@>6dd149*/1], &/*@>6dd5ea*/localDW->/*@>6dd8aa*/obj./*@>6dd889*/Buffer[0], /*@>6dd178*/24U/*@>6dd18b*/ * /*@>6dd18a*/sizeof(real_T));
/*@]*/
/*@[3*/
/*@>6dd359*/memcpy(&/*@>6dd5f1*/localDW->/*@>6dd8ad*/obj./*@>6dd886*/Buffer[0], &/*@>6dd54f*/localB->/*@>6dd898*/rtu_0/*@>6dd164*/[/*@>6dd13b*/0], /*@>6dd158*/25U/*@>6dd167*/ * /*@>6dd166*/sizeof(real_T));
/*@]*/
/* {E!d4232}End of MATLABSystem: '<S51>/MATLAB System1' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 1, 0)>
%endif
%if SLibCG_ArgAccessed(0, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void MicroMouseTem_MATLABSystem1(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("MicroMouseTem_MATLABSystem1", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MATLABSystem1_MicroMouseTem_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem1_MicroMouseTe_T *localDW\
%assign comma = ", "
%<comma>P_MATLABSystem1_MicroMouseTem_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 1, fcnProtoType)>
%endfunction
