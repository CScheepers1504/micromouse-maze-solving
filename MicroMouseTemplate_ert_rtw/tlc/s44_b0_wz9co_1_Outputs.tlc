%implements s44_b0_wz9co_1_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d3914}MATLABSystem: '<S59>/MATLAB System1' */
/*@>6d3531*/if (/*@>6dbfa7*/localDW->/*@>6dc273*/obj.InitialCondition/*@>6d3527*/ != /*@>6dbf32*/localP->/*@>6dc26d*/MATLABSystem1_InitialCondition) {
    /*@>6dbfae*/localDW->/*@>6dc276*/obj./*@>6dc255*/InitialCondition/*@>6d3528*/ = /*@>6dbf39*/localP->/*@>6dc270*/MATLABSystem1_InitialCondition;
}
/*  Number of inputs */
/*  Number of outputs */
/*  Output the current state of the buffer */
/*@[6d9bda*/
/*@>6dbd28*/memcpy(&/*@>6dbf06*/localB->/*@>6dc261*/MATLABSystem1/*@>6dbba9*/[/*@>6dbb98*/0], &/*@>6dbfb5*/localDW->/*@>6dc279*/obj./*@>6dc25e*/Buffer[0], /*@>6dbba7*/25U/*@>6dbbba*/ * /*@>6dbbb9*/sizeof(real_T));
/*@]*/
/*  Update the buffer */
/*@>6dbf14*/localB->/*@>6dc264*/rtu_0/*@>6da2d7*/[/*@>6daceb*/0]/*@>6da2de*/ = /*@>6dace2*/rtu_0;
/*@[6d9bdb*/
/*@>6dbd2a*/memcpy(&/*@>6dbf1b*/localB->/*@>6dc267*/rtu_0/*@>6dbb4d*/[/*@>6dbb1c*/1], &/*@>6dbfbc*/localDW->/*@>6dc27c*/obj./*@>6dc25b*/Buffer[0], /*@>6dbb4b*/24U/*@>6dbb5e*/ * /*@>6dbb5d*/sizeof(real_T));
/*@]*/
/*@[6d9bdc*/
/*@>6dbd2c*/memcpy(&/*@>6dbfc3*/localDW->/*@>6dc27f*/obj./*@>6dc258*/Buffer[0], &/*@>6dbf22*/localB->/*@>6dc26a*/rtu_0/*@>6dbb37*/[/*@>6dbb0e*/0], /*@>6dbb2b*/25U/*@>6dbb3a*/ * /*@>6dbb39*/sizeof(real_T));
/*@]*/
/* {E!d3914}End of MATLABSystem: '<S59>/MATLAB System1' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[1].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(1, 1, 0)>
%endif
%if SLibCG_ArgAccessed(1, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(1, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void MicroMouseTem_MATLABSystem1(\
%assign comma = ""
%if SLibCG_ArgAccessed(1, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("MicroMouseTem_MATLABSystem1", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MATLABSystem1_MicroMouseTem_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem1_MicroMouseTe_T *localDW\
%assign comma = ", "
%<comma>P_MATLABSystem1_MicroMouseTem_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 1, fcnProtoType)>
%endfunction
