%implements s40_b0_mhu4o_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d2082}MATLABSystem: '<S51>/MATLAB System1' */
/*@>6d369b*/if (/*@>6da8fb*/localDW->/*@>6dabc7*/obj.InitialCondition/*@>6d3691*/ != /*@>6da885*/localP->/*@>6dabc1*/MATLABSystem1_InitialCondition) {
    /*@>6da902*/localDW->/*@>6dabca*/obj./*@>6daba9*/InitialCondition/*@>6d3692*/ = /*@>6da88c*/localP->/*@>6dabc4*/MATLABSystem1_InitialCondition;
}
/*  Number of inputs */
/*  Number of outputs */
/*  Output the current state of the buffer */
/*@[1*/
/*@>6da67b*/memcpy(&/*@>6da859*/localB->/*@>6dabb5*/MATLABSystem1/*@>6da4fc*/[/*@>6da4eb*/0], &/*@>6da909*/localDW->/*@>6dabcd*/obj./*@>6dabb2*/Buffer[0], /*@>6da4fa*/25U/*@>6da50d*/ * /*@>6da50c*/sizeof(real_T));
/*@]*/
/*  Update the buffer */
/*@>6da867*/localB->/*@>6dabb8*/rtu_0/*@>6d8c2a*/[/*@>6d963e*/0]/*@>6d8c31*/ = /*@>6d9635*/rtu_0;
/*@[2*/
/*@>6da67d*/memcpy(&/*@>6da86e*/localB->/*@>6dabbb*/rtu_0/*@>6da4a0*/[/*@>6da46f*/1], &/*@>6da910*/localDW->/*@>6dabd0*/obj./*@>6dabaf*/Buffer[0], /*@>6da49e*/24U/*@>6da4b1*/ * /*@>6da4b0*/sizeof(real_T));
/*@]*/
/*@[3*/
/*@>6da67f*/memcpy(&/*@>6da917*/localDW->/*@>6dabd3*/obj./*@>6dabac*/Buffer[0], &/*@>6da875*/localB->/*@>6dabbe*/rtu_0/*@>6da48a*/[/*@>6da461*/0], /*@>6da47e*/25U/*@>6da48d*/ * /*@>6da48c*/sizeof(real_T));
/*@]*/
/* {E!d2082}End of MATLABSystem: '<S51>/MATLAB System1' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 1, 0)>
%endif
%if SLibCG_ArgAccessed(0, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void MicroMouseTem_MATLABSystem1(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("MicroMouseTem_MATLABSystem1", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MATLABSystem1_MicroMouseTem_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem1_MicroMouseTe_T *localDW\
%assign comma = ", "
%<comma>P_MATLABSystem1_MicroMouseTem_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 1, fcnProtoType)>
%endfunction
