%implements s40_b0_usxeo_1_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d4284}MATLABSystem: '<S51>/MATLAB System3' */
/*@>6d1b7b*/if (/*@>6dab31*/localDW->/*@>6dadfd*/obj.InitialCondition/*@>6d1b71*/ != /*@>6daad7*/localP->/*@>6dadf7*/MATLABSystem3_InitialCondition) {
    /*@>6dab38*/localDW->/*@>6dae00*/obj./*@>6daddf*/InitialCondition/*@>6d1b72*/ = /*@>6daade*/localP->/*@>6dadfa*/MATLABSystem3_InitialCondition;
}
/*  Number of inputs */
/*  Number of outputs */
/*  Output the current state of the buffer */
/*@[6d8766*/
/*@>6da8d5*/memcpy(&/*@>6daaab*/localB->/*@>6dadeb*/MATLABSystem3/*@>6da756*/[/*@>6da745*/0], &/*@>6dab3f*/localDW->/*@>6dae03*/obj./*@>6dade8*/Buffer[0], /*@>6da754*/10U/*@>6da767*/ * /*@>6da766*/sizeof(real_T));
/*@]*/
/*  Update the buffer */
/*@>6daab9*/localB->/*@>6dadee*/rtu_0/*@>6d8e84*/[/*@>6d9898*/0]/*@>6d8e8b*/ = /*@>6d988f*/rtu_0;
/*@[6d8767*/
/*@>6da8d7*/memcpy(&/*@>6daac0*/localB->/*@>6dadf1*/rtu_0/*@>6da6fa*/[/*@>6da6c9*/1], &/*@>6dab46*/localDW->/*@>6dae06*/obj./*@>6dade5*/Buffer[0], /*@>6da6f8*/9U/*@>6da70b*/ * /*@>6da70a*/sizeof(real_T));
/*@]*/
/*@[6d8768*/
/*@>6da8d9*/memcpy(&/*@>6dab4d*/localDW->/*@>6dae09*/obj./*@>6dade2*/Buffer[0], &/*@>6daac7*/localB->/*@>6dadf4*/rtu_0/*@>6da6e4*/[/*@>6da6bb*/0], /*@>6da6d8*/10U/*@>6da6e7*/ * /*@>6da6e6*/sizeof(real_T));
/*@]*/
/* {E!d4284}End of MATLABSystem: '<S51>/MATLAB System3' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[1].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(1, 1, 0)>
%endif
%if SLibCG_ArgAccessed(1, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(1, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void MicroMouseTemplat_MATLABSystem3(\
%assign comma = ""
%if SLibCG_ArgAccessed(1, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("MicroMouseTemplat_MATLABSystem3", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MATLABSystem3_MicroMouseTem_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem3_MicroMouseTe_T *localDW\
%assign comma = ", "
%<comma>P_MATLABSystem3_MicroMouseTem_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 1, fcnProtoType)>
%endfunction
