%implements s41_b0_idr2o_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d822}MATLABSystem: '<S51>/MATLAB System1' */
/*@>6d6763*/if (/*@>6dd758*/localDW->/*@>6dda24*/obj.InitialCondition/*@>6d6759*/ != /*@>6dd6e1*/localP->/*@>6dda1e*/MATLABSystem1_InitialCondition) {
    /*@>6dd75f*/localDW->/*@>6dda27*/obj./*@>6dda06*/InitialCondition/*@>6d675a*/ = /*@>6dd6e8*/localP->/*@>6dda21*/MATLABSystem1_InitialCondition;
}
/*  Number of inputs */
/*  Number of outputs */
/*  Output the current state of the buffer */
/*@[1*/
/*@>6dd4d7*/memcpy(&/*@>6dd6b5*/localB->/*@>6dda12*/MATLABSystem1/*@>6dd358*/[/*@>6dd347*/0], &/*@>6dd766*/localDW->/*@>6dda2a*/obj./*@>6dda0f*/Buffer[0], /*@>6dd356*/25U/*@>6dd369*/ * /*@>6dd368*/sizeof(real_T));
/*@]*/
/*  Update the buffer */
/*@>6dd6c3*/localB->/*@>6dda15*/rtu_0/*@>6dba86*/[/*@>6dc49a*/0]/*@>6dba8d*/ = /*@>6dc491*/rtu_0;
/*@[2*/
/*@>6dd4d9*/memcpy(&/*@>6dd6ca*/localB->/*@>6dda18*/rtu_0/*@>6dd2fc*/[/*@>6dd2cb*/1], &/*@>6dd76d*/localDW->/*@>6dda2d*/obj./*@>6dda0c*/Buffer[0], /*@>6dd2fa*/24U/*@>6dd30d*/ * /*@>6dd30c*/sizeof(real_T));
/*@]*/
/*@[3*/
/*@>6dd4db*/memcpy(&/*@>6dd774*/localDW->/*@>6dda30*/obj./*@>6dda09*/Buffer[0], &/*@>6dd6d1*/localB->/*@>6dda1b*/rtu_0/*@>6dd2e6*/[/*@>6dd2bd*/0], /*@>6dd2da*/25U/*@>6dd2e9*/ * /*@>6dd2e8*/sizeof(real_T));
/*@]*/
/* {E!d822}End of MATLABSystem: '<S51>/MATLAB System1' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 1, 0)>
%endif
%if SLibCG_ArgAccessed(0, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void MicroMouseTem_MATLABSystem1(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("MicroMouseTem_MATLABSystem1", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MATLABSystem1_MicroMouseTem_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem1_MicroMouseTe_T *localDW\
%assign comma = ", "
%<comma>P_MATLABSystem1_MicroMouseTem_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 1, fcnProtoType)>
%endfunction
