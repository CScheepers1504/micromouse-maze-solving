%implements s40_b0_p5yco_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d270}MATLABSystem: '<S51>/MATLAB System1' */
/*@>6d2873*/if (/*@>6d93d8*/localDW->/*@>6d96a4*/obj.InitialCondition/*@>6d2869*/ != /*@>6d937e*/localP->/*@>6d969e*/MATLABSystem1_InitialCondition) {
    /*@>6d93df*/localDW->/*@>6d96a7*/obj./*@>6d9686*/InitialCondition/*@>6d286a*/ = /*@>6d9385*/localP->/*@>6d96a1*/MATLABSystem1_InitialCondition;
}
/*  Number of inputs */
/*  Number of outputs */
/*  Output the current state of the buffer */
/*@[1*/
/*@>6d9174*/memcpy(&/*@>6d9352*/localB->/*@>6d9692*/MATLABSystem1/*@>6d8ff5*/[/*@>6d8fe4*/0], &/*@>6d93e6*/localDW->/*@>6d96aa*/obj./*@>6d968f*/Buffer[0], /*@>6d8ff3*/25U/*@>6d9006*/ * /*@>6d9005*/sizeof(real_T));
/*@]*/
/*  Update the buffer */
/*@>6d9360*/localB->/*@>6d9695*/rtu_0/*@>6d7723*/[/*@>6d8137*/0]/*@>6d772a*/ = /*@>6d812e*/rtu_0;
/*@[2*/
/*@>6d9176*/memcpy(&/*@>6d9367*/localB->/*@>6d9698*/rtu_0/*@>6d8f99*/[/*@>6d8f68*/1], &/*@>6d93ed*/localDW->/*@>6d96ad*/obj./*@>6d968c*/Buffer[0], /*@>6d8f97*/24U/*@>6d8faa*/ * /*@>6d8fa9*/sizeof(real_T));
/*@]*/
/*@[3*/
/*@>6d9178*/memcpy(&/*@>6d93f4*/localDW->/*@>6d96b0*/obj./*@>6d9689*/Buffer[0], &/*@>6d936e*/localB->/*@>6d969b*/rtu_0/*@>6d8f83*/[/*@>6d8f5a*/0], /*@>6d8f77*/25U/*@>6d8f86*/ * /*@>6d8f85*/sizeof(real_T));
/*@]*/
/* {E!d270}End of MATLABSystem: '<S51>/MATLAB System1' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 1, 0)>
%endif
%if SLibCG_ArgAccessed(0, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void MicroMouseTemplat_MATLABSystem1(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("MicroMouseTemplat_MATLABSystem1", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MATLABSystem1_MicroMouseTem_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem1_MicroMouseTe_T *localDW\
%assign comma = ", "
%<comma>P_MATLABSystem1_MicroMouseTem_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 1, fcnProtoType)>
%endfunction
