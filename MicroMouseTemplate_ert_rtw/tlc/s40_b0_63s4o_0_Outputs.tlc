%implements s40_b0_63s4o_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d910}MATLABSystem: '<S51>/MATLAB System1' */
/*@>6d3970*/if (/*@>6da94d*/localDW->/*@>6dac19*/obj.InitialCondition/*@>6d3966*/ != /*@>6da8d7*/localP->/*@>6dac13*/MATLABSystem1_InitialCondition) {
    /*@>6da954*/localDW->/*@>6dac1c*/obj./*@>6dabfb*/InitialCondition/*@>6d3967*/ = /*@>6da8de*/localP->/*@>6dac16*/MATLABSystem1_InitialCondition;
}
/*  Number of inputs */
/*  Number of outputs */
/*  Output the current state of the buffer */
/*@[1*/
/*@>6da6cd*/memcpy(&/*@>6da8ab*/localB->/*@>6dac07*/MATLABSystem1/*@>6da54e*/[/*@>6da53d*/0], &/*@>6da95b*/localDW->/*@>6dac1f*/obj./*@>6dac04*/Buffer[0], /*@>6da54c*/25U/*@>6da55f*/ * /*@>6da55e*/sizeof(real_T));
/*@]*/
/*  Update the buffer */
/*@>6da8b9*/localB->/*@>6dac0a*/rtu_0/*@>6d8c7c*/[/*@>6d9690*/0]/*@>6d8c83*/ = /*@>6d9687*/rtu_0;
/*@[2*/
/*@>6da6cf*/memcpy(&/*@>6da8c0*/localB->/*@>6dac0d*/rtu_0/*@>6da4f2*/[/*@>6da4c1*/1], &/*@>6da962*/localDW->/*@>6dac22*/obj./*@>6dac01*/Buffer[0], /*@>6da4f0*/24U/*@>6da503*/ * /*@>6da502*/sizeof(real_T));
/*@]*/
/*@[3*/
/*@>6da6d1*/memcpy(&/*@>6da969*/localDW->/*@>6dac25*/obj./*@>6dabfe*/Buffer[0], &/*@>6da8c7*/localB->/*@>6dac10*/rtu_0/*@>6da4dc*/[/*@>6da4b3*/0], /*@>6da4d0*/25U/*@>6da4df*/ * /*@>6da4de*/sizeof(real_T));
/*@]*/
/* {E!d910}End of MATLABSystem: '<S51>/MATLAB System1' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 1, 0)>
%endif
%if SLibCG_ArgAccessed(0, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void MicroMouseTem_MATLABSystem1(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("MicroMouseTem_MATLABSystem1", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MATLABSystem1_MicroMouseTem_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem1_MicroMouseTe_T *localDW\
%assign comma = ", "
%<comma>P_MATLABSystem1_MicroMouseTem_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 1, fcnProtoType)>
%endfunction
