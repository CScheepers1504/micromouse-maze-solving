%implements s41_b0_57r2o_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d1112}MATLABSystem: '<S51>/MATLAB System1' */
/*@>6d6396*/if (/*@>6dd708*/localDW->/*@>6dd9d4*/obj.InitialCondition/*@>6d638c*/ != /*@>6dd691*/localP->/*@>6dd9ce*/MATLABSystem1_InitialCondition) {
    /*@>6dd70f*/localDW->/*@>6dd9d7*/obj./*@>6dd9b6*/InitialCondition/*@>6d638d*/ = /*@>6dd698*/localP->/*@>6dd9d1*/MATLABSystem1_InitialCondition;
}
/*  Number of inputs */
/*  Number of outputs */
/*  Output the current state of the buffer */
/*@[1*/
/*@>6dd487*/memcpy(&/*@>6dd665*/localB->/*@>6dd9c2*/MATLABSystem1/*@>6dd308*/[/*@>6dd2f7*/0], &/*@>6dd716*/localDW->/*@>6dd9da*/obj./*@>6dd9bf*/Buffer[0], /*@>6dd306*/25U/*@>6dd319*/ * /*@>6dd318*/sizeof(real_T));
/*@]*/
/*  Update the buffer */
/*@>6dd673*/localB->/*@>6dd9c5*/rtu_0/*@>6dba36*/[/*@>6dc44a*/0]/*@>6dba3d*/ = /*@>6dc441*/rtu_0;
/*@[2*/
/*@>6dd489*/memcpy(&/*@>6dd67a*/localB->/*@>6dd9c8*/rtu_0/*@>6dd2ac*/[/*@>6dd27b*/1], &/*@>6dd71d*/localDW->/*@>6dd9dd*/obj./*@>6dd9bc*/Buffer[0], /*@>6dd2aa*/24U/*@>6dd2bd*/ * /*@>6dd2bc*/sizeof(real_T));
/*@]*/
/*@[3*/
/*@>6dd48b*/memcpy(&/*@>6dd724*/localDW->/*@>6dd9e0*/obj./*@>6dd9b9*/Buffer[0], &/*@>6dd681*/localB->/*@>6dd9cb*/rtu_0/*@>6dd296*/[/*@>6dd26d*/0], /*@>6dd28a*/25U/*@>6dd299*/ * /*@>6dd298*/sizeof(real_T));
/*@]*/
/* {E!d1112}End of MATLABSystem: '<S51>/MATLAB System1' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 1, 0)>
%endif
%if SLibCG_ArgAccessed(0, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void MicroMouseTem_MATLABSystem1(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("MicroMouseTem_MATLABSystem1", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MATLABSystem1_MicroMouseTem_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem1_MicroMouseTe_T *localDW\
%assign comma = ", "
%<comma>P_MATLABSystem1_MicroMouseTem_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 1, fcnProtoType)>
%endfunction
