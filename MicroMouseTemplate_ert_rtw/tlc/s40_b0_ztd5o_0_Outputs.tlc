%implements s40_b0_ztd5o_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* {S!d10154}MATLABSystem: '<S51>/MATLAB System1' */
/*@>6d6706*/if (/*@>6dd74c*/localDW->/*@>6dda18*/obj.InitialCondition/*@>6d66fc*/ != /*@>6dd6d6*/localP->/*@>6dda12*/MATLABSystem1_InitialCondition) {
    /*@>6dd753*/localDW->/*@>6dda1b*/obj./*@>6dd9fa*/InitialCondition/*@>6d66fd*/ = /*@>6dd6dd*/localP->/*@>6dda15*/MATLABSystem1_InitialCondition;
}
/*  Number of inputs */
/*  Number of outputs */
/*  Output the current state of the buffer */
/*@[1*/
/*@>6dd4cc*/memcpy(&/*@>6dd6aa*/localB->/*@>6dda06*/MATLABSystem1/*@>6dd34d*/[/*@>6dd33c*/0], &/*@>6dd75a*/localDW->/*@>6dda1e*/obj./*@>6dda03*/Buffer[0], /*@>6dd34b*/25U/*@>6dd35e*/ * /*@>6dd35d*/sizeof(real_T));
/*@]*/
/*  Update the buffer */
/*@>6dd6b8*/localB->/*@>6dda09*/rtu_0/*@>6dba7b*/[/*@>6dc48f*/0]/*@>6dba82*/ = /*@>6dc486*/rtu_0;
/*@[2*/
/*@>6dd4ce*/memcpy(&/*@>6dd6bf*/localB->/*@>6dda0c*/rtu_0/*@>6dd2f1*/[/*@>6dd2c0*/1], &/*@>6dd761*/localDW->/*@>6dda21*/obj./*@>6dda00*/Buffer[0], /*@>6dd2ef*/24U/*@>6dd302*/ * /*@>6dd301*/sizeof(real_T));
/*@]*/
/*@[3*/
/*@>6dd4d0*/memcpy(&/*@>6dd768*/localDW->/*@>6dda24*/obj./*@>6dd9fd*/Buffer[0], &/*@>6dd6c6*/localB->/*@>6dda0f*/rtu_0/*@>6dd2db*/[/*@>6dd2b2*/0], /*@>6dd2cf*/25U/*@>6dd2de*/ * /*@>6dd2dd*/sizeof(real_T));
/*@]*/
/* {E!d10154}End of MATLABSystem: '<S51>/MATLAB System1' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 1, 0)>
%endif
%if SLibCG_ArgAccessed(0, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void MicroMouseTem_MATLABSystem1(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("MicroMouseTem_MATLABSystem1", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_0\
%assign comma = ", "
%<comma>B_MATLABSystem1_MicroMouseTem_T *localB\
%assign comma = ", "
%<comma>DW_MATLABSystem1_MicroMouseTe_T *localDW\
%assign comma = ", "
%<comma>P_MATLABSystem1_MicroMouseTem_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 1, fcnProtoType)>
%endfunction
